apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: servicex-release-testing-1
  namespace: servicex-testing-1
spec:
  releaseName: servicex-release-testing-1
  serviceAccountName: servicex-testing-1
  chart:
    spec:
      chart: servicex
      sourceRef:
        kind: HelmRepository
        name: servicex-repo
      version: ">=1.4.0-0"
  interval: 5m
  values:
    objectStore:
      enabled: true
      internal: true
      publicURL: testing-1-minio.servicex.ssl-hep.org
      useTLS: false
      useClientTLS: true

    app:
      image: sslhep/servicex_app
      tag: "792_celery_did_finder"
      logLevel: "debug"
      adminEmail: ivukotic@uchicago.edu
      pullPolicy: Always
      auth: true
      replicas: 1
      mailgunDomain: servicex.ssl-hep.org
      # need dummy values so that it's in the config file
      slackSigningSecret: "dummy"
      newSignupWebhook: "dummy"
      ingress:
        enabled: true
        tls:
          enabled: true
          host: servicex-release-testing-1.servicex.ssl-hep.org
          clusterIssuer: letsencrypt-prod

    rabbitmq:
      clusterDomain: river-dev
      metrics:
        enabled: false
        plugins: rabbitmq_prometheus
        podAnnotations:
          prometheus.io/port: "9419"
          prometheus.io/scrape: "true"
        prometheusRule:
          additionalLabels: {}
          enabled: false
          namespace: ""
          rules: []
        serviceMonitor:
          additionalLabels: {}
          enabled: true
          honorLabels: false
          interval: 30s
      persistence:
        enabled: true
        storageClass: rook-ceph-block
      auth:
        existingErlangSecret: servicex-secrets
        existingPasswordSecret: servicex-secrets
      nodeselector:
        storage: rook

    didFinder:
      rucio:
        tag: 792_celery_did_finder
        enabled: true
        servicex_latitude: 41.78
        servicex_longitude: -87.7
      CERNOpenData:
        enabled: true
        tag: 792_celery_did_finder
      xrootd:
        enabled: true
        tag: 792_celery_did_finder

    codeGen:
      uproot:
        enabled: true
        image: sslhep/servicex_code_gen_func_adl_uproot
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5-safe

      python:
        enabled: true
        image: sslhep/servicex_code_gen_python
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5-safe

      atlasr21:
        enabled: true
        image: sslhep/servicex_code_gen_atlas_xaod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_xaod_transformer
        defaultScienceContainerTag: 21.2.231

      atlasr22:
        enabled: true
        image: sslhep/servicex_code_gen_atlas_xaod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_xaod_transformer
        defaultScienceContainerTag: 22.2.107

      cmssw-5-3-32:
        enabled: true
        image: sslhep/servicex_code_gen_cms_aod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_cms_aod_transformer
        defaultScienceContainerTag: cmssw-5-3-32

      uproot-raw:
        enabled: true
        image: ponyisi/code_gen_raw_uproot
        tag: "develop"
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5-safe


    transformer:
      defaultTransformerTag: develop
      sidecarImage: sslhep/servicex_sidecar_transformer
      sidecarTag: "792_celery_did_finder"
      cachePrefix: null
      autoscaler:
        enabled: true
        cpuScaleThreshold: 30
        minReplicas: 1
        maxReplicas: 2
      cpuLimit: 1

    postgres:
      enabled: true

    postgresql:
      primary:
        persistence:
          enabled: true
          storageClass: rook-ceph-block
          # storageClass: local-volumes
        nodeSelector:
          storage: "rook"
      global:
        postgresql:
          auth:
            database: servicex
            existingSecret: servicex-secrets
            secretKeys:
              adminPasswordKey: postgresql-password

    minio:
      auth:
        existingSecret: servicex-secrets
      tls:
        enabled: false
      service:
        ports:
          api: 9000
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: "testing-1-minio-console.servicex.ssl-hep.org"
        tls: true
      apiIngress:
        enabled: true
        tls: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: "testing-1-minio.servicex.ssl-hep.org"

    gridAccount: ivukotic

    rbacEnabled: true

    ### secrets location
    secrets: servicex-secrets

    logging:
      logstash:
        logs: "https://atlas-kibana.mwt2.org:5601/s/servicex/app/dashboards?auth_provider_hint=anonymous1#/view/3a570940-f34c-11ed-a6d8-9f6a16cd6d78?embed=true&_g=(refreshInterval%3A(pause%3A!t%2Cvalue%3A0)%2Ctime%3A(from%3Anow-24h%2Fh%2Cto%3Anow))&show-time-filter=true&hide-filter-bar=true"

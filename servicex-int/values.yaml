apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: servicex-release-int
  namespace: servicex-int
spec:
  releaseName: servicex-release-int
  serviceAccountName: servicex-int
  chart:
    spec:
      chart: servicex
      sourceRef:
        kind: HelmRepository
        name: servicex-repo
      version: "1.1.5-alpha4"
  interval: 5m
  values:
    # Enable deployment of Minio Object Store with this chart - use this if you
    # want to have the option of delivering results as parquet files
    objectStore:
      enabled: true
      internal: true
      publicURL: int-minio.servicex.ssl-hep.org
      useTLS: false
      useClientTLS: true
    logging:
      logstash:
        enabled: true
        host: servicex.atlas-ml.org
        port: 5959
        protocol: TCP
    app:
      tag: develop
      pullPolicy: Always
      defaultUsers: "users"
      auth: true
      replicas: 1
      logLevel: INFO
      mailgunDomain: servicex.ssl-hep.org
      slackSigningSecret: dummy
      newSignupWebhook: dummy
      ingress:
        enabled: true
        tls:
          enabled: true
          host: servicex-release-int.servicex.ssl-hep.org
          clusterIssuer: letsencrypt-prod
    rabbitmq:
      nodeselector:
        storage: rook
      metrics:
        enabled: false
        plugins: rabbitmq_prometheus
        podAnnotations:
          prometheus.io/port: "9419"
          prometheus.io/scrape: "true"
        prometheusRule:
          additionalLabels: {}
          enabled: false
          namespace: ""
          rules: []
        serviceMonitor:
          additionalLabels: {}
          enabled: true
          honorLabels: false
          interval: 30s
      persistence:
        enabled: false
        storageClass: rook-ceph-block
      auth:
        existingErlangSecret: servicex-secrets
        existingPasswordSecret: servicex-secrets
      extraConfiguration: |-
        consumer_timeout = 3600000
    x509Secrets:
      vomsOrg: atlas
    didFinder:
      rucio:
        enabled: true
        cachePrefix: root://192.170.240.18:1094//
        servicex_latitude: 41.78
        servicex_longitude: -87.7
        memcache:
          enabled: true
          ttl: 86400
      CERNOpenData:
        enabled: true
    codeGen:
      uproot:
        enabled: true
        image: sslhep/servicex_code_gen_func_adl_uproot
        pullPolicy: Always
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: develop
      python:
        enabled: true
        image: sslhep/servicex_code_gen_python
        pullPolicy: Always
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: develop
      atlasxaod:
        enabled: true
        image: sslhep/servicex_code_gen_atlas_xaod
        pullPolicy: Always
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_xaod_transformer
        defaultScienceContainerTag: develop
      cms:
        enabled: false
    transformer:
      cachePrefix: "\"root://192.170.240.18:1094//\""
      autoscaler:
        enabled: true
        cpuScaleThreshold: 30
        minReplicas: 10
        maxReplicas: 750
      pullPolicy: Always
      cpuLimit: 1
    postgres:
      enabled: true
    postgresql:
      primary:
        resources:
          requests:
            cpu: 8
        persistence:
          enabled: false
          storageClass: rook-ceph-block
        nodeSelector:
          kernel-ml: "true"
          storage: rook
      global:
        postgresql:
          auth:
            database: servicex
            existingSecret: servicex-secrets
            secretKeys:
              adminPasswordKey: postgresql-password
    minio:
      auth:
        existingSecret: servicex-secrets
      tls:
        enabled: false
      service:
        ports:
          api: 9000
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: int-minio-console.servicex.ssl-hep.org
        tls: true
      apiIngress:
        enabled: true
        tls: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: int-minio.servicex.ssl-hep.org
    minioCleanup:
      enabled: false
    gridAccount: ivukotic
    rbacEnabled: true
    secrets: servicex-secrets

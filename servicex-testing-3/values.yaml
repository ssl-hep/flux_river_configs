apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: servicex-release-testing-3
  namespace: servicex-testing-3
spec:
  releaseName: servicex-release-testing-3
  serviceAccountName: servicex-testing-3
  chart:
    spec:
      chart: servicex
      sourceRef:
        kind: HelmRepository
        name: servicex-repo
      version: ">=1.4.1"
  interval: 5m
  values:
    objectStore:
      enabled: true
      internal: true
      publicURL: testing-3-minio.servicex.ssl-hep.org
      useTLS: false
      useClientTLS: true
    app:
      tag: postgres-preping
      adminEmail: bengal1@illinois.edu
      pullPolicy: Always
      auth: true
      replicas: 1
      mailgunDomain: servicex.ssl-hep.org
      slackSigningSecret: "dummy"
      newSignupWebhook: "dummy"
      sqlalchemyEngineOptions: '{"pool_pre_ping": True}'
      ingress:
        enabled: true
        tls:
          enabled: true
          host: servicex-release-testing-3.servicex.ssl-hep.org
          clusterIssuer: letsencrypt-prod

    rabbitmq:
      clusterDomain: river-dev
      metrics:
        enabled: false
        plugins: rabbitmq_prometheus
        podAnnotations:
          prometheus.io/port: "9419"
          prometheus.io/scrape: "true"
        prometheusRule:
          additionalLabels: {}
          enabled: false
          namespace: ""
          rules: []
        serviceMonitor:
          additionalLabels: {}
          enabled: true
          honorLabels: false
          interval: 30s
      persistence:
        enabled: false
        # storageClass: rook-ceph-block
      auth:
        existingErlangSecret: servicex-secrets
        existingPasswordSecret: servicex-secrets
      # nodeselector:
      #   storage: rook

    didFinder:
      rucio:
        enabled: true
        image: sslhep/servicex-did-finder
        tag: develop
      CERNOpenData:
        enabled: false
        # image: sslhep/servicex-did-finder-cernopendata
        tag: develop

    codeGen:
      uproot:
        enabled: true
        image: sslhep/servicex_code_gen_func_adl_uproot
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5

      python:
        enabled: true
        image: sslhep/servicex_code_gen_python
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5

      atlasr21:
        enabled: true
        image: sslhep/servicex_code_gen_atlas_xaod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_xaod_transformer
        defaultScienceContainerTag: 21.3.131

      atlasr22:
        enabled: true
        image: sslhep/servicex_code_gen_atlas_xaod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_xaod_transformer
        defaultScienceContainerTag: 22.2.107

      cmssw-5-3-32:
        enabled: true
        image: sslhep/servicex_code_gen_cms_aod
        tag: develop
        defaultScienceContainerImage: sslhep/servicex_func_adl_cms_aod_transformer
        defaultScienceContainerTag: cmssw-5-3-32
        
      uproot-raw:
        enabled: true
        image: sslhep/servicex_code_gen_raw_uproot
        tag: inclusive-error-logging
        defaultScienceContainerImage: sslhep/servicex_func_adl_uproot_transformer
        defaultScienceContainerTag: uproot5
        
    transformer:
      defaultTransformerTag: develop
      sidecarImage: sslhep/servicex_sidecar_transformer
      sidecarTag: inclusive-error-logging
      cachePrefix: '"xcache.af.uchicago.edu:1094"'
      # cachePrefix: '""'
      autoscaler:
        enabled: true
        cpuScaleThreshold: 30
        minReplicas: 10
        maxReplicas: 750
      cpuLimit: 1

    postgres:
      enabled: true

    postgresql:
      primary:
        persistence:
          enabled: false
          storageClass: rook-ceph-block
        nodeSelector:
          storage: "rook"
      global:
        postgresql:
          auth:
            database: servicex
            existingSecret: servicex-secrets
            secretKeys:
              adminPasswordKey: postgresql-password

    minio:
      auth:
        existingSecret: servicex-secrets
      tls:
        enabled: false
      service:
        ports:
          api: 9000
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: "testing-3-minio-console.servicex.ssl-hep.org"
        tls: true
      apiIngress:
        enabled: true
        tls: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
          acme.cert-manager.io/http01-edit-in-place: "true"
        hostname: "testing-3-minio.servicex.ssl-hep.org"

    minioCleanup:
      tag: "develop"
      enabled: true
      schedule: "0 */8 * * *"
      maxAge: 30
      maxSize: "1500G"
      normSize: "1T"

    gridAccount: ivukotic

    rbacEnabled: true

    ### secrets location
    secrets: servicex-secrets

    logging:
      logstash:
        logs: "https://atlas-kibana.mwt2.org:5601/s/servicex/app/dashboards?auth_provider_hint=anonymous1#/view/2612d340-f34e-11ed-a6d8-9f6a16cd6d78?embed=true&_g=()&show-time-filter=true&hide-filter-bar=true"
